init: i
accept: f

//escrever sinal de igual
i,1
i,1,<

//para remover os 0s iniciais
i,0
i,_,>

i,_
igual,#,>

i,*
limpar,_,>

//Se X = 0, então basta apagar tudo e escrever 0 no fim.
limpar,0
limpar,_,>

limpar,1
limpar,_,>

limpar,_
f,0,-

//após escrever o sinal de igual, encontrar último dígito de Y
igual,#
igual,#,>

igual,1
igual,1,>

igual,0
igual,0,>

igual,*
igual,*,>

igual,_
identificar,_,<

igual,Z
igual,0,>

igual,U
igual,1,>

igual,u
igual,u,>

igual,z
igual,z,>

igual,|
igual,|,>

igual,o
igual,o,>

//Após encontrar a fita vazia, identificar o último dígito
//identificar 1
identificar,1
um,_,<

um,1
um,1,<

um,0
um,0,<

um,*
multiplicar1,*,<

//identificar 0
identificar,0
zero,_,<

zero,1
zero,1,<

zero,0
zero,0,<

zero,*
multiplicar0,*,<

//Após identificar o último dígito de Y, iniciar a multiplicação dos dígitos de X
//multiplicar por 1
multiplicar1,1
resultado1,U,<

multiplicar1,0
resultado0,Z,<

//multiplicar por 0
multiplicar0,1
produto0,U,<

multiplicar0,0
produto0,Z,<

//Escrever resultados 1*1 = 1 ou 1*0 = 0
//escrever resultado 1
resultado1,1
resultado1,1,<

resultado1,0
resultado1,0,<

resultado1,#
resultado1,#,<

resultado1,_
volte1,1,>

//escrever resultado 0
resultado0,1
resultado0,1,<

resultado0,0
resultado0,0,<

resultado0,#
resultado0,#,<

resultado0,_
volte1,0,>

//escrever resultados 0*0=0 ou 0*1=0
//escrever resultado 0
produto0,1
produto0,1,<

produto0,0
produto0,0,<

produto0,#
produto0,#,<

produto0,_
volte0,0,>

//Após escrever o resultado da multiplicação por 1, voltar para multiplicar o próximo dígito de Y
volte1,#
volte1,#,>

volte1,0
volte1,0,>

volte1,1
volte1,1,>

volte1,U
multiplicar1,U,<

volte1,Z
multiplicar1,Z,<

//Após escrever o resultado da multiplicação por 0, voltar para multiplicar o próximo dígito de Y
volte0,0
volte0,0,>

volte0,1
volte0,1,>

volte0,#
volte0,#,>

volte0,U
multiplicar0,U,<

volte0,Z
multiplicar0,Z,<

//Quando terminar de multiplicar os dígitos de X e colocar os resultados, a fita lerá o sinal de # (igual). Quando isso ocorrer, a fita renomeará o LSB do resultado para que ele não participe das somas;
multiplicar1,#
LSB,#,<

multiplicar0,#
LSB,#,<

//Após alterar o símbolo do LSB, o processo de multiplicação recomeçará.
LSB,1
igual,|,>

LSB,0
igual,o,>

//No momento de colocar o resultado da multiplicação, o cabeçote lerá o símbolo do LSB e a fita iniciará o processo de soma  
//Soma por 0
produto0,|
soma0,|,<

produto0,o
soma0,o,<

soma0,|
soma0,|,<

soma0,o
soma0,o,<

soma0,1
volte0,u,>

soma0,0
volte0,z,>

soma0,_
volte0,0,>

soma0,u
soma0,u,<

soma0,z
soma0,z,<

//Retornar para multiplicar os dígitos de X por 0
volte0,|
volte0,|,>

volte0,o
volte0,o,>

volte0,u
volte0,u,>

volte0,z
volte0,z,>

//soma por 1
resultado1,|
soma1,|,<

resultado1,o
soma1,o,<

soma1,|
soma1,|,<

soma1,o
soma1,o,<

soma1,0
volte1,u,>

soma1,_
volte1,1,>

//soma de 1+1
soma1,1
vai1,z,<

vai1,1
vai1,0,<

vai1,0
volte1,1,>

vai1,_
volte1,1,>

soma1,u
soma1,u,<

soma1,z
soma1,z,<

//resultado de 1*0
resultado0,o
somazero,o,<

resultado0,|
somazero,|,<

somazero,0
volte1,z,>

somazero,1
volte1,u,>

somazero,u
somazero,u,<

somazero,z
somazero,z,<

somazero,|
somazero,|,<

somazero,o
somazero,o,<

//Retornar para multiplicar os dígitos de X por 1
volte1,|
volte1,|,>

volte1,o
volte1,o,>

volte1,u
volte1,u,>

volte1,z
volte1,z,>

//Quando o estado multiplicar0 ou multiplicar1 encontrar '#' ele mudará de estado para marcar o próximo LSB
LSB,o
LSB,o,<

LSB,|
LSB,|,<

LSB,z
mudarsimbolo,o,<

LSB,u
mudarsimbolo,|,<

mudarsimbolo,z
mudarsimbolo,0,<

mudarsimbolo,u
mudarsimbolo,1,<

mudarsimbolo,_
igual,_,>

mudarsimbolo,0
igual,0,>

mudarsimbolo,1
igual,1,>

//identificar *, apagar até #, e converter os símbolos
identificar,*
apagar,_,<

apagar,1
apagar,_,<

apagar,0
apagar,_,<

apagar,#
resultado,_,<

resultado,|
resultado,1,<

resultado,o
resultado,0,<

resultado,1
resultado,1,<

resultado,0
resultado,0,<

resultado,_
f,_,>